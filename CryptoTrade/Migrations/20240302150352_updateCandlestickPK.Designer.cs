// <auto-generated />
using System;
using CryptoTrade.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CryptoTrade.Migrations
{
    [DbContext(typeof(CryptoTradeContext))]
    [Migration("20240302150352_updateCandlestickPK")]
    partial class updateCandlestickPK
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CryptoTrade.Entities.Candlestick", b =>
                {
                    b.Property<DateTime>("OpenTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ClosePrice")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<DateTime>("CloseTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("HighPrice")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<int>("IntervalId")
                        .HasColumnType("int");

                    b.Property<decimal>("LowPrice")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal>("OpenPrice")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal>("QuoteVolume")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("SymbolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("TakerBuyBaseVolume")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal>("TakerBuyQuoteVolume")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<int>("TradeCount")
                        .HasColumnType("int");

                    b.Property<decimal>("Volume")
                        .HasColumnType("decimal(18, 6)");

                    b.HasKey("OpenTime");

                    b.HasIndex("IntervalId");

                    b.HasIndex("SymbolName");

                    b.ToTable("Candlesticks");
                });

            modelBuilder.Entity("CryptoTrade.Entities.Interval", b =>
                {
                    b.Property<int>("IntervalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IntervalId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IntervalId");

                    b.ToTable("Intervals");

                    b.HasData(
                        new
                        {
                            IntervalId = 1,
                            Name = "1s"
                        },
                        new
                        {
                            IntervalId = 60,
                            Name = "1m"
                        },
                        new
                        {
                            IntervalId = 180,
                            Name = "3m"
                        },
                        new
                        {
                            IntervalId = 300,
                            Name = "5m"
                        },
                        new
                        {
                            IntervalId = 900,
                            Name = "15m"
                        },
                        new
                        {
                            IntervalId = 1800,
                            Name = "30m"
                        },
                        new
                        {
                            IntervalId = 3600,
                            Name = "1h"
                        },
                        new
                        {
                            IntervalId = 7200,
                            Name = "2h"
                        },
                        new
                        {
                            IntervalId = 14400,
                            Name = "4h"
                        },
                        new
                        {
                            IntervalId = 21600,
                            Name = "6h"
                        },
                        new
                        {
                            IntervalId = 28800,
                            Name = "8h"
                        },
                        new
                        {
                            IntervalId = 43200,
                            Name = "12h"
                        },
                        new
                        {
                            IntervalId = 86400,
                            Name = "1d"
                        },
                        new
                        {
                            IntervalId = 259200,
                            Name = "3d"
                        },
                        new
                        {
                            IntervalId = 604800,
                            Name = "1w"
                        },
                        new
                        {
                            IntervalId = 2592000,
                            Name = "1M"
                        });
                });

            modelBuilder.Entity("CryptoTrade.Entities.Symbol", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BaseAsset")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuoteAsset")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Name");

                    b.ToTable("Symbols");
                });

            modelBuilder.Entity("CryptoTrade.Entities.Candlestick", b =>
                {
                    b.HasOne("CryptoTrade.Entities.Interval", "Interval")
                        .WithMany()
                        .HasForeignKey("IntervalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CryptoTrade.Entities.Symbol", "Symbol")
                        .WithMany()
                        .HasForeignKey("SymbolName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interval");

                    b.Navigation("Symbol");
                });
#pragma warning restore 612, 618
        }
    }
}
